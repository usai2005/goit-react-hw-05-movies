{"version":3,"file":"static/js/597.ab91dcd8.chunk.js","mappings":"yNAIMA,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAoEN,UAhEa,WACX,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAwBR,OAtBAE,EAAAA,EAAAA,YAAU,WAAM,wCAGd,sGACyBC,MAAM,sCAAD,OACYH,EADZ,2BAE1BV,GAHJ,cACQc,EADR,gBAK2BA,EAASC,OALpC,cAKQC,EALR,yBAOSA,GAPT,4CAHc,sBACdP,GAAa,GADC,0CAadQ,GACGC,MAAK,SAAAF,GACJT,EAAQS,EAAWV,KACpB,IACAa,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAlB,IAETG,QAAQd,GAAa,GACzB,GAAE,CAACC,KAGF,gCACGF,IACC,0BACE,SAAC,KAAD,CACEgB,YAAY,UACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,MAIE,IAAhBtB,EAAKuB,QACJ,uBAAG,uDAEH,wBACGvB,EAAKwB,KAAI,YAAqD,IAAlDC,EAAiD,EAAjDA,GAAIC,EAA6C,EAA7CA,aAAcC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UAC5C,OACE,2BACE,gBACEC,IAAG,0CAAqCH,GACxCL,MAAM,MACNS,IAAKJ,IAENC,GACD,uBAAIC,MAPGH,EAUZ,QAKV,C,sBC3ED,SAASM,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOxB,GAEP,YADAkB,EAAOlB,EAET,CAEIuB,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAO5B,KAAKuB,EAAOC,EAEvC,CAEe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GAEzB,SAASZ,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOtB,GACdiB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAAStB,EACnE,CAEAqB,OAAMe,EACR,GACF,CACF,C","sources":["components/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { RotatingLines } from 'react-loader-spinner';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJjMGUxN2RiYWMzM2I5YjY2YTE1OGFjMWQ5ZjBiNDgzZiIsInN1YiI6IjY0NmFhMTAxMmJjZjY3MDEzODk1NWI2MSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.SDn_VnUi_rZiJUD7l1IkM4cvRuTnV717d1ByGV3DRUI',\n  },\n};\n\nconst Cast = function () {\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    async function fetchCast() {\n      const response = await fetch(\n        `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US`,\n        options\n      );\n      const actorsList = await response.json();\n\n      return actorsList;\n    }\n\n    fetchCast()\n      .then(actorsList => {\n        setCast(actorsList.cast);\n      })\n      .catch(err => console.error(err))\n\n      .finally(setIsLoading(false));\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && (\n        <div>\n          <RotatingLines\n            strokeColor=\"#FF0000\"\n            strokeWidth=\"5\"\n            animationDuration=\"0.75\"\n            width=\"50\"\n            visible={true}\n          />\n        </div>\n      )}\n      {cast.length === 0 ? (\n        <p>Sorry, we don't have information about the actors</p>\n      ) : (\n        <ul>\n          {cast.map(({ id, profile_path, original_name, character }) => {\n            return (\n              <li key={id}>\n                <img\n                  src={`https://image.tmdb.org/t/p/w500/${profile_path}`}\n                  width=\"100\"\n                  alt={profile_path}\n                ></img>\n                {original_name}\n                <p>{character}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["options","method","headers","accept","Authorization","useState","cast","setCast","isLoading","setIsLoading","movieId","useParams","useEffect","fetch","response","json","actorsList","fetchCast","then","catch","err","console","error","finally","strokeColor","strokeWidth","animationDuration","width","visible","length","map","id","profile_path","original_name","character","src","alt","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","undefined"],"sourceRoot":""}