{"version":3,"file":"static/js/681.cf8428cd.chunk.js","mappings":"mLACA,EAAoC,kC,SCGvBA,EAAS,SAAC,GACrB,OADqC,EAAdC,UAGnB,gBAAKC,UAAWC,EAAhB,UACE,SAAC,KAAD,CACEC,YAAY,UACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,KAKlB,C,yGCdKC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAmDN,UA/CgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAsBR,OApBAE,EAAAA,EAAAA,YAAU,WAAM,wCAEd,sGACyBC,MAAM,sCAAD,OACYH,EADZ,kCAE1BV,GAHJ,cACQc,EADR,gBAKwBA,EAASC,OALjC,cAKQT,EALR,yBAMSA,GANT,2CAFc,wBACdG,GAAa,GADC,0CAWdO,GACGC,MAAK,SAAAX,GACJC,EAAWD,EAAQY,QACpB,IACAC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAlB,IAETG,QAAQd,GAAa,GACzB,GAAE,CAACC,KAGF,iCACG,SAAC,IAAD,CAAQlB,QAASgB,IACE,IAAnBF,EAAQkB,QACP,uBAAG,2CAEH,wBACGlB,EAAQmB,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,GAAIC,EAAc,EAAdA,QAC1B,OACE,2BACE,0BAAI,WAASF,MACb,uBAAIE,MAFGD,EAKZ,QAKV,C","sources":["webpack://goit-react-hw-05-movies/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","components/Reviews.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loader__container\":\"Loader_loader__container__dne6P\"};","import PropTypes from 'prop-types';\nimport { RotatingLines } from 'react-loader-spinner';\nimport css from './Loader.module.css';\n\nexport const Loader = ({ loading }) => {\n  return (\n    loading && (\n      <div className={css.loader__container}>\n        <RotatingLines\n          strokeColor=\"#FF0000\"\n          strokeWidth=\"5\"\n          animationDuration=\"0.75\"\n          width=\"50\"\n          visible={true}\n        />\n      </div>\n    )\n  );\n};\n\nLoader.propTypes = {\n  loading: PropTypes.bool.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from '../components/Loader/Loader';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJjMGUxN2RiYWMzM2I5YjY2YTE1OGFjMWQ5ZjBiNDgzZiIsInN1YiI6IjY0NmFhMTAxMmJjZjY3MDEzODk1NWI2MSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.SDn_VnUi_rZiJUD7l1IkM4cvRuTnV717d1ByGV3DRUI',\n  },\n};\n\nconst Reviews = function () {\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    async function fetchReviews() {\n      const response = await fetch(\n        `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&page=1`,\n        options\n      );\n      const reviews = await response.json();\n      return reviews;\n    }\n\n    fetchReviews()\n      .then(reviews => {\n        setReviews(reviews.results);\n      })\n      .catch(err => console.error(err))\n\n      .finally(setIsLoading(false));\n  }, [movieId]);\n\n  return (\n    <>\n      {<Loader loading={isLoading} />}\n      {reviews.length === 0 ? (\n        <p>Unfortunately, nobody left the review</p>\n      ) : (\n        <ul>\n          {reviews.map(({ author, id, content }) => {\n            return (\n              <li key={id}>\n                <h3>Author: {author}</h3>\n                <p>{content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["Loader","loading","className","css","strokeColor","strokeWidth","animationDuration","width","visible","options","method","headers","accept","Authorization","useState","reviews","setReviews","isLoading","setIsLoading","movieId","useParams","useEffect","fetch","response","json","fetchReviews","then","results","catch","err","console","error","finally","length","map","author","id","content"],"sourceRoot":""}