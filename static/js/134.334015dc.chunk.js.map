{"version":3,"file":"static/js/134.334015dc.chunk.js","mappings":"iOAKMA,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NA4FN,UAxFe,WAAa,IAAD,EACzB,GAAwCC,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAwCC,EAAAA,EAAAA,IAAgB,CAAC,GAAzD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCL,EAAAA,EAAAA,WAAS,GAA3C,eAAOM,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAsCT,EAAAA,EAAAA,UAAS,IAA/C,eAAOU,EAAP,KAAoBC,EAApB,KACMC,EAAa,UAAGR,EAAaS,IAAI,gBAApB,QAAgC,IAEnDC,EAAAA,EAAAA,YAAU,WAAM,wCAKd,sGACyBC,MAAM,6CAAD,OACmBL,EADnB,8CAE1Bf,GAHJ,cACQqB,EADR,gBAMwBA,EAASC,OANjC,cAMQC,EANR,yBAOSA,GAPT,4CALc,sBACM,KAAhBR,IACJR,EAAgB,MAChBK,GAAa,GAHC,0CAedY,GACGC,MAAK,SAAAF,GACJ,IAAMG,EAAaH,EAAQA,QAE3BhB,EAAgBmB,EACjB,IACAC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAlB,IAETG,QAAQnB,GAAa,IACzB,GAAE,CAACG,IAkBJ,OACE,4BACE,kBAAMiB,SAVW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cAEfpB,EAAe,SAAD,OAAUmB,EAAKE,SAAStB,YAAYuB,QAClDH,EAAKI,OACN,EAIG,WACE,kBACEC,KAAK,OACLC,KAAK,cACLH,MAAOrB,EACPyB,SAvBkB,SAAAT,GACxB,IAAMU,EAAYV,EAAEW,OAAON,MAGvB5B,EADU,KAAdiC,EACoB,CAAC,EACD,CAAEE,MAAOF,GAC9B,KAmBK,mBAAQH,KAAK,SAAb,SAAsB,cAEvB7B,IACC,0BACE,SAAC,KAAD,CACEmC,YAAY,UACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,OAIf,wBACG5C,GACCA,EAAa6C,KAAI,SAAAC,GACf,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAM3C,GAAxC,SACGuC,EAAMK,MAAQL,EAAMK,MAAQL,EAAMX,QAF9BW,EAAME,GAMlB,QAIV,C,sBCpGD,SAASI,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChB3B,EAAQ4B,EAAK5B,KAInB,CAHE,MAAOR,GAEP,YADA+B,EAAO/B,EAET,CAEIoC,EAAKC,KACPP,EAAQtB,GAER8B,QAAQR,QAAQtB,GAAOb,KAAKqC,EAAOC,EAEvC,CAEe,SAASM,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUR,EAASC,GACpC,IAAIF,EAAMW,EAAGK,MAAMJ,EAAME,GAEzB,SAASX,EAAMxB,GACboB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQzB,EAClE,CAEA,SAASyB,EAAOnC,GACd8B,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASnC,EACnE,CAEAkC,OAAMc,EACR,GACF,CACF,C","sources":["pages/Movies.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { RotatingLines } from 'react-loader-spinner';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJjMGUxN2RiYWMzM2I5YjY2YTE1OGFjMWQ5ZjBiNDgzZiIsInN1YiI6IjY0NmFhMTAxMmJjZjY3MDEzODk1NWI2MSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.SDn_VnUi_rZiJUD7l1IkM4cvRuTnV717d1ByGV3DRUI',\n  },\n};\n\nconst Movies = function () {\n  const [searchResult, setSearchResult] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams({});\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n  const [searchQuery, setSearchQuery] = useState('');\n  const onChangeQuery = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (searchQuery === '') return;\n    setSearchResult(null);\n    setIsLoading(true);\n\n    async function searchMovie() {\n      const response = await fetch(\n        `https://api.themoviedb.org/3/search/movie?${searchQuery}&include_adult=false&language=en-US&page=1`,\n        options\n      );\n\n      const results = await response.json();\n      return results;\n    }\n\n    searchMovie()\n      .then(results => {\n        const moviesList = results.results;\n\n        setSearchResult(moviesList);\n      })\n      .catch(err => console.error(err))\n\n      .finally(setIsLoading(false));\n  }, [searchQuery]);\n\n  const updateQueryString = e => {\n    const movieName = e.target.value;\n\n    movieName === ''\n      ? setSearchParams({})\n      : setSearchParams({ query: movieName });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n\n    setSearchQuery(`query=${form.elements.searchQuery.value}`);\n    form.reset();\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"searchQuery\"\n          value={onChangeQuery}\n          onChange={updateQueryString}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      {isLoading && (\n        <div>\n          <RotatingLines\n            strokeColor=\"#FF0000\"\n            strokeWidth=\"5\"\n            animationDuration=\"0.75\"\n            width=\"50\"\n            visible={true}\n          />\n        </div>\n      )}\n      <ul>\n        {searchResult &&\n          searchResult.map(movie => {\n            return (\n              <li key={movie.id}>\n                <Link to={`${movie.id}`} state={{ from: location }}>\n                  {movie.title ? movie.title : movie.name}\n                </Link>\n              </li>\n            );\n          })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["options","method","headers","accept","Authorization","useState","searchResult","setSearchResult","useSearchParams","searchParams","setSearchParams","isLoading","setIsLoading","location","useLocation","searchQuery","setSearchQuery","onChangeQuery","get","useEffect","fetch","response","json","results","searchMovie","then","moviesList","catch","err","console","error","finally","onSubmit","e","preventDefault","form","currentTarget","elements","value","reset","type","name","onChange","movieName","target","query","strokeColor","strokeWidth","animationDuration","width","visible","map","movie","to","id","state","from","title","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","undefined"],"sourceRoot":""}